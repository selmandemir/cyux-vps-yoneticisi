#!/bin/bash
clear
# Gerekli ShellBot kütüphanesini dahil et.
source ShellBot.sh

# Script'e verilen argümanları (bot token'ı ve admin ID'si) al.
api_bot=$1
id_admin=$2

# ShellBot'u başlat.
ShellBot.init --token "$api_bot" --monitor --flush
ShellBot.username

# --- FONKSİYON: Ana menüyü gösterir ---
menu() {
    # Eğer mesajı gönderen admin ise, menü düğmelerini göster.
    if [[ "${message_from_id[$id]}" == "$id_admin" ]]; then
        local msg
        msg="◇──────────────────◇\n"
        msg+="<b>•🔹•ㅤ🐉ㅤCyux VPS Yöneticisiㅤ🐉ㅤ•🔹•</b>\n"
        msg+="◇──────────────────◇\n\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
            --text "$(echo -e $msg)" \
            --reply_markup "$keyboard1" \
            --parse_mode html
        return 0
    fi
    # Eğer admin değilse, erişimi reddet.
    ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e 🚫 ERİŞİM REDDEDİLDİ 🚫)"
    return 0
}

# --- FONKSİYON: 30 günlük SSH hesabı oluşturur ---
criarssh30() {
    # Rastgele bir kullanıcı adı ve şifre oluştur.
    usuario=$(echo KULLANICI$(( RANDOM% + 999999)))
    senha=$((RANDOM% + 99999))
    limite='1'
    tempo='31' # Geçerlilik süresi (gün)
    
    # Son kullanma tarihini sistem formatında ve okunabilir formatta hesapla.
    final=$(date "+%Y-%m-%d" -d "+$tempo days")
    gui=$(date "+%d/%m/%Y" -d "+$tempo days")
    pass=$(perl -e 'print crypt($ARGV[0], "password")' $senha)
    
    # Oluşturulan kullanıcı adı sistemde zaten var mı diye kontrol et.
    if [[ "$(grep -wc $usuario /etc/passwd)" != '0' ]]; then
        ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
            --text "◇ OLUŞTURULAN HESAP ZATEN MEVCUT! TEKRAR DENEYİN."
        return 0
    else
        # Kullanıcıyı oluştur, şifresini ayarla ve veritabanlarına kaydet.
        useradd -e $final -M -s /bin/false -p $pass $usuario >/dev/null 2>&1
        (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
        echo "$senha" > /etc/VPSManager/senha/$usuario
        echo "$usuario $limite" >> /root/usuarios.db

        # Kullanıcı bilgilerini Telegram'a gönder.
        ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
            --text "$(echo -e "✅ <b>Hesap başarıyla oluşturuldu</b> ✅\n\n<b>SUNUCU</b>: $(cat /etc/IP) \n<b>KULLANICI ADI</b>: <code>$usuario</code>\n<b>ŞİFRE</b>: <code>$senha</code>\n<b>LİMİT</b>: 01\n\n⏳ Son Kullanma Tarihi: $gui ")" \
            --parse_mode html
        return 0
    fi
}

# --- FONKSİYON: 15 günlük SSH hesabı oluşturur ---
criarssh15() {
    # Rastgele bir kullanıcı adı ve şifre oluştur.
    usuario=$(echo KULLANICI$(( RANDOM% + 999999)))
    senha=$((RANDOM% + 99999))
    limite='1'
    tempo='16' # Geçerlilik süresi (gün)

    # Son kullanma tarihini hesapla.
    final=$(date "+%Y-%m-%d" -d "+$tempo days")
    gui=$(date "+%d/%m/%Y" -d "+$tempo days")
    pass=$(perl -e 'print crypt($ARGV[0], "password")' $senha)
    
    # Kullanıcı adı zaten var mı diye kontrol et.
    if [[ "$(grep -wc $usuario /etc/passwd)" != '0' ]]; then
        ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
            --text "◇ OLUŞTURULAN HESAP ZATEN MEVCUT! TEKRAR DENEYİN."
        return 0
    else
        # Kullanıcıyı oluştur ve bilgilerini kaydet.
        useradd -e $final -M -s /bin/false -p $pass $usuario >/dev/null 2>&1
        (echo "$senha";echo "$senha") | passwd $usuario > /dev/null 2>&1
        echo "$senha" > /etc/VPSManager/senha/$usuario
        echo "$usuario $limite" >> /root/usuarios.db

        # Kullanıcı bilgilerini Telegram'a gönder.
        ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
            --text "$(echo -e "✅ <b>Hesap başarıyla oluşturuldu</b> ✅\n\n<b>SUNUCU</b>: $(cat /etc/IP) \n<b>KULLANICI ADI</b>: <code>$usuario</code>\n<b>ŞİFRE</b>: <code>$senha</code>\n<b>LİMİT</b>: 01\n\n⏳ Son Kullanma Tarihi: $gui ")" \
            --parse_mode html
        return 0
    fi
}

# --- FONKSİYON: Kullanıcının Telegram bilgilerini gösterir ---
infouser () {
    ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e "İsim:  ${message_from_first_name[$(ShellBot.ListUpdates)]}\nKullanıcı: @${message_from_username[$(ShellBot.ListUpdates)]:-null}")\nID: ${message_from_id[$(ShellBot.ListUpdates)]} " \
        --parse_mode html
    return 0
}

# --- Düğme Tanımlamaları ---
unset botao1; botao1=''
ShellBot.InlineKeyboardButton --button 'botao1' --line 1 --text '30 GÜNLÜK SSH HESABI' --callback_data 'gerarssh30'
ShellBot.InlineKeyboardButton --button 'botao1' --line 2 --text '15 GÜNLÜK SSH HESABI' --callback_data 'gerarssh15'

# Fonksiyonları düğme verilerine ata.
ShellBot.regHandleFunction --function criarssh30 --callback_data gerarssh30
ShellBot.regHandleFunction --function criarssh15 --callback_data gerarssh15

# Düğmeleri bir klavye düzenine yerleştir.
unset keyboard1; keyboard1="$(ShellBot.InlineKeyboardMarkup -b 'botao1')"

# --- Ana Bot Döngüsü ---
# Sürekli olarak Telegram'dan gelen güncellemeleri dinler.
while :; do
    ShellBot.getUpdates --limit 100 --offset $(ShellBot.OffsetNext) --timeout 30
    for id in $(ShellBot.ListUpdates); do
        (
            # Bir düğmeye tıklandıysa, ilgili fonksiyonu çalıştır.
            ShellBot.watchHandle --callback_data ${callback_query_data[$id]}
            
            # Gelen mesaj bir komut ise, ilgili fonksiyonu çalıştır.
            comando=(${message_text[$id]})
            [[ "${comando[0]}" = "/menu"  || "${comando[0]}" = "/start" ]] && menu
            [[ "${comando[0]}" = "/id"    ]] && infouser
        ) &
    done
done