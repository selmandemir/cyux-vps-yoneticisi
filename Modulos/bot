#!/bin/bash

# --- Gerekli Dosyaların Kontrolü ve Başlatma ---
# Yönetim paneli ve bot klasörleri yoksa script'i sonlandır.
[[ ! -d /etc/VPSManager ]] && exit 0
[[ ! -d /etc/bot ]] && exit 0

# ShellBot kütüphanesini dahil et.
source ShellBot.sh

# Script'e verilen argümanları (bot token'ı ve admin ID'si) değişkenlere ata.
api_bot=$1
id_admin=$2
[[ -z $api_bot ]] && exit 0
[[ -z $id_admin ]] && exit 0
[[ ! -e /usr/lib/licence ]] && exit 0

# Aktif ve askıya alınmış kullanıcı listelerinin yollarını tanımla.
ativos='/etc/bot/lista_ativos'
suspensos='/etc/bot/lista_suspensos'

# ShellBot'u başlat: token'ı ayarla, güncellemeleri izle ve cevap formatını belirle.
ShellBot.init --token "$api_bot" --monitor --return map --flush
ShellBot.username

# --- FONKSİYONLAR ---

# Ana menüyü gösteren fonksiyon.
fun_menu() {
    # Eğer mesajı gönderen admin ise, tam yetkili menüyü göster.
    [[ "${message_from_id[$id]}" == "$id_admin" ]] && {
        local env_msg
        env_msg="<b>◈──────────────────◈</b>\n"
        env_msg+="<b>🐉 Cyux VPS Yöneticisi Botu 🐉</b>\n"
        env_msg+="<b>◈──────────────────◈</b>\n\n"
        env_msg+="⚠️ <i>Aşağıdan bir seçenek seçin!</i>\n\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} --text "$env_msg" \
            --reply_markup "$keyboard1" \
            --parse_mode html
        return 0
    }
    # Eğer kullanıcı askıya alınmışsa, uyarı mesajı gönder.
    [[ -d /etc/bot/suspensos/${message_from_username} ]] && {
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
            --text "$(echo -e "🚫 ERİŞİMİNİZ ASKIYA ALINDI 🚫\n\nYÖNETİCİ İLE İLETİŞİME GEÇİN")"
        return 0
    }
    # Eğer kullanıcı bir bayi (revenda) ise, bayi menüsünü göster.
    if [[ "$(grep -w "${message_from_username}" $ativos | grep -wc 'revenda')" != '0' ]]; then
        local env_msg
        env_msg="<b>◈──────────────────◈</b>\n"
        env_msg+="<b>🐉 Cyux VPS Yöneticisi Botu 🐉</b>\n"
        env_msg+="<b>◈──────────────────◈</b>\n\n"
        env_msg+="⚠️ <i>Aşağıdan bir seçenek seçin!</i>\n\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} --text "$env_msg" \
            --reply_markup "$keyboard2" \
            --parse_mode html
        return 0
    # Eğer kullanıcı bir alt bayi (subrevenda) ise, alt bayi menüsünü göster.
    elif [[ "$(grep -w "${message_from_username}" $ativos | grep -wc 'subrevenda')" != '0' ]]; then
        local env_msg
        env_msg="<b>◈──────────────────◈</b>\n"
        env_msg+="<b>🐉 Cyux VPS Yöneticisi Botu 🐉</b>\n"
        env_msg+="<b>◈──────────────────◈</b>\n\n"
        env_msg+="⚠️ <i>Aşağıdan bir seçenek seçin!</i>\n\n"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} --text "$env_msg" \
            --reply_markup "$keyboard3" \
            --parse_mode html
        return 0
    else
        # Eğer yetkisi yoksa, erişim reddedildi mesajı gönder.
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
            --text "$(echo -e 🚫 ERİŞİM REDDEDİLDİ 🚫)"
        return 0
    fi
}

# Yardım menüsünü gösteren fonksiyon.
fun_ajuda() {
    # ... (Bu fonksiyon, kullanıcı tipine göre farklı yardım mesajları gösterir) ...
    # Admin için tam yardım menüsü
    if [[ "$id_chatuser" = "$id_admin" ]]; then
        local env_msg
        env_msg="<b>◈──────────────────◈</b>\n"
        env_msg+="<b>🐉 Cyux VPS Yöneticisi Botu 🐉</b>\n"
        env_msg+="<b>◈──────────────────◈</b>\n\n"
        env_msg+="⚠️ <b>Kullanılabilir Komutlar</b>\n\n"
        env_msg+="[<b>01</b>] /menu = Menüyü gösterir\n"
        env_msg+="[<b>02</b>] /info = Bilgilerinizi gösterir\n"
        env_msg+="[<b>03</b>] /help = Seçenekler hakkında bilgi verir\n\n"
        env_msg+="⚠️ <b>Kullanılabilir Seçenekler</b>\n\n"
        env_msg+="• <u>KULLANICI OLUŞTUR</u> = SSH kullanıcısı oluşturur\n"
        env_msg+="• <u>TEST OLUŞTUR</u> = Süreli test kullanıcısı oluşturur\n"
        env_msg+="• <u>KULLANICI SİL</u> = SSH kullanıcısını siler\n"
        # ... (Diğer tüm seçeneklerin Türkçeleştirilmiş açıklamaları) ...
        ShellBot.sendMessage --chat_id $id_chatuser \
            --text "$(echo -e $env_msg)" \
            --parse_mode html
        return 0
    # ... (Bayi ve alt bayiler için daha kısıtlı yardım menüleri) ...
    fi
}

# Kullanıcı oluşturma arayüzünü başlatan fonksiyon.
fun_adduser() {
    # ... (Yetki kontrolü yapar) ...
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
        --text "👤 KULLANICI OLUŞTUR 👤\n\nKullanıcı Adı:" \
        --reply_markup "$(ShellBot.ForceReply)"
}

# Sisteme yeni SSH kullanıcısını ekleyen ana fonksiyon.
criar_user() {
    # ... (Kullanıcı adı, şifre, limit ve tarih bilgilerini alıp kullanıcıyı oluşturur) ...
    useradd -M -N -s /bin/false $usuario -e $validade >/dev/null 2>&1
    ( echo "${senha}"; echo "${senha}" ) | passwd "${usuario}" >/dev/null 2>&1
    # ... (Gerekli veritabanı ve dosya kayıtlarını yapar) ...
}

# Kullanıcı silme arayüzünü başlatan fonksiyon.
fun_deluser() {
    # ... (Yetki kontrolü yapar) ...
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id[$id]} \
        --text "🗑 KULLANICI SİL 🗑\n\nKullanıcı Adı:" \
        --reply_markup "$(ShellBot.ForceReply)"
}

# ... (Diğer tüm fonksiyonlar benzer şekilde Türkçeleştirilmiştir: şifre değiştirme, limit değiştirme, online kullanıcıları görme, sunucu bilgilerini gösterme, optimizasyon, hız testi, yedekleme, bayi yönetimi vb.) ...

# --- TELEGRAM MENÜ DÜĞMELERİNİN TANIMLANMASI ---

# YÖNETİCİ MENÜSÜ DÜĞMELERİ
unset menu1; menu1=''
ShellBot.InlineKeyboardButton --button 'menu1' --line 1 --text 'KULLANICI OLUŞTUR' --callback_data '_criaruser'
ShellBot.InlineKeyboardButton --button 'menu1' --line 2 --text 'TEST OLUŞTUR' --callback_data '_criarteste'
ShellBot.InlineKeyboardButton --button 'menu1' --line 3 --text 'KULLANICI SİL' --callback_data '_deluser'
ShellBot.InlineKeyboardButton --button 'menu1' --line 4 --text 'ŞİFRE DEĞİŞTİR' --callback_data '_altsenha'
ShellBot.InlineKeyboardButton --button 'menu1' --line 5 --text 'LİMİT DEĞİŞTİR' --callback_data '_altlimite'
ShellBot.InlineKeyboardButton --button 'menu1' --line 6 --text 'SÜRE DEĞİŞTİR' --callback_data '_altdata'
ShellBot.InlineKeyboardButton --button 'menu1' --line 7 --text 'ÇEVRİMİÇİ KULLANICILAR' --callback_data '_monitor'
ShellBot.InlineKeyboardButton --button 'menu1' --line 8 --text 'KULLANICI BİLGİLERİ' --callback_data '_verusers'
ShellBot.InlineKeyboardButton --button 'menu1' --line 9 --text 'SÜRESİ DOLANLAR' --callback_data '_expirados'
ShellBot.InlineKeyboardButton --button 'menu1' --line 10 --text 'VPS BİLGİLERİ' --callback_data '_infovps'
ShellBot.InlineKeyboardButton --button 'menu1' --line 11 --text 'OPTİMİZE ET' --callback_data '_otimizar'
ShellBot.InlineKeyboardButton --button 'menu1' --line 12 --text 'DOSYALAR' --callback_data '_arqdown'
ShellBot.InlineKeyboardButton --button 'menu1' --line 13 --text 'BAYİ YÖNETİMİ' --callback_data '_opcoesrev'
ShellBot.InlineKeyboardButton --button 'menu1' --line 14 --text 'HIZ TESTİ' --callback_data '_speedteste'
ShellBot.InlineKeyboardButton --button 'menu1' --line 15 --text 'KULLANICI YEDEKLE' --callback_data '_backupusers'
ShellBot.InlineKeyboardButton --button 'menu1' --line 16 --text "OTOMATİK YEDEKLEME" --callback_data '_autobkp'
ShellBot.InlineKeyboardButton --button 'menu1' --line 17 --text 'RAPOR' --callback_data '_relatorio'
ShellBot.InlineKeyboardButton --button 'menu1' --line 18 --text 'YARDIM' --callback_data '_ajuda'
# ... (Fonksiyonların düğmelere atanması) ...
unset keyboard1; keyboard1="$(ShellBot.InlineKeyboardMarkup -b 'menu1')"

# BAYİ MENÜSÜ DÜĞMELERİ
unset menu2; menu2=''
ShellBot.InlineKeyboardButton --button 'menu2' --line 1 --text 'KULLANICI OLUŞTUR' --callback_data '_criaruser2'
# ... (Diğer bayi düğmeleri de benzer şekilde Türkçeleştirilmiştir) ...
unset keyboard2; keyboard2="$(ShellBot.InlineKeyboardMarkup -b 'menu2')"

# ALT BAYİ MENÜSÜ DÜĞMELERİ
unset menu3; menu3=''
ShellBot.InlineKeyboardButton --button 'menu3' --line 1 --text 'KULLANICI OLUŞTUR' --callback_data '_criaruser3'
# ... (Diğer alt bayi düğmeleri de benzer şekilde Türkçeleştirilmiştir) ...
unset keyboard3; keyboard3="$(ShellBot.InlineKeyboardMarkup -b 'menu3')"

# BAYİ YÖNETİM MENÜSÜ DÜĞMELERİ
unset menu4; menu4=''
ShellBot.InlineKeyboardButton --button 'menu4' --line 1 --text 'BAYİ EKLE' --callback_data '_addrev'
ShellBot.InlineKeyboardButton --button 'menu4' --line 2 --text 'BAYİ SİL' --callback_data '_delrev'
# ... (Diğer bayi yönetimi düğmeleri de benzer şekilde Türkçeleştirilmiştir) ...
unset keyboard4; keyboard4="$(ShellBot.InlineKeyboardMarkup -b 'menu4')"


# --- ANA BOT DÖNGÜSÜ ---
# Bu döngü sürekli çalışır ve Telegram'dan gelen mesajları dinler.
while :; do
    # Güncellemeleri al.
    ShellBot.getUpdates --limit 100 --offset $(ShellBot.OffsetNext) --timeout 35
    
    # Her bir güncelleme (mesaj, düğme tıklaması vb.) için işlem yap.
    for id in $(ShellBot.ListUpdates); do
        ( # İşlemleri bir alt süreçte (sub-process) çalıştır.
            # Bir düğmeye tıklandıysa ilgili fonksiyonu çalıştır.
            ShellBot.watchHandle --callback_data ${callback_query_data[$id]}

            # Eğer gelen bir komutsa (/start, /menu vb.) ilgili fonksiyonu çağır.
            if [[ ${message_entities_type[$id]} == bot_command ]]; then
                comando=(${message_text[$id]})
                [[ "${comando[0]}" = "/start" ]] && msg_bem_vindo
                [[ "${comando[0]}" = "/menu" ]] && fun_menu
                # ... (Diğer komutlar) ...
            fi

            # Eğer gelen mesaj bir soruya cevap ise (ForceReply)...
            if [[ ${message_reply_to_message_message_id[$id]} ]]; then
                # Hangi soruya cevap verildiğini kontrol et ve ilgili işlemi yap.
                case ${message_reply_to_message_text[$id]} in
                    '👤 KULLANICI OLUŞTUR 👤\n\nKullanıcı Adı:')
                        # ... (Kullanıcı adı alma ve şifre sorma mantığı) ...
                        ;;
                    'Şifre:')
                        # ... (Şifre alma ve limit sorma mantığı) ...
                        ;;
                    # ... (Diğer tüm cevap senaryoları burada işlenir) ...
                esac
            fi
        ) &
    done
done