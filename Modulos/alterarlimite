#!/bin/bash
# Başlık metnini mavi arka plan üzerine beyaz ve kalın olarak yazdır.
tput setaf 7 ; tput setab 4 ; tput bold ; printf '%20s%s\n' "ㅤ🐉ㅤEş Zamanlı Bağlantı Limitini Değiştirmeㅤ🐉ㅤ" ; tput sgr0

# Kullanıcı limitlerinin saklandığı veritabanı dosyasının yolu.
database="/root/usuarios.db"

# Veritabanı dosyası yoksa hata ver ve çık.
if [ ! -f "$database" ]; then
    tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "$database Dosyası bulunamadı!" ; echo "" ; tput sgr0
    exit 1
else
    # Eğer dosya varsa, kullanıcıların listesini ve mevcut limitlerini göster.
    tput setaf 3 ; tput bold ; echo ""; echo "◇ KULLANICI LİSTESİ VE LİMİTLERİ:" ; tput sgr0
    echo ""
    
    # Sistemdeki normal kullanıcıları (/etc/passwd dosyasından) listele.
    _userT=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody)
    i=0
    unset _userPass
    
    # Her bir kullanıcı için bir döngü başlat.
    while read _user; do
        i=$(expr $i + 1)
        _oP=$i
        [[ $i == [1-9] ]] && i=0$i && oP+=" 0$i"
        
        # Kullanıcının limiti veritabanı dosyasında kayıtlı mı diye kontrol et.
        if [[ "$(grep -wc "$_user" $database)" != "0" ]]; then
            # Kayıtlıysa, limiti dosyadan oku.
            limit=$(grep -w "$_user" $database | cut -d' ' -f2)
        else
            # Kayıtlı değilse, varsayılan olarak limiti '1' kabul et.
            limit='1'
        fi
        
        # Kullanıcı adını ve limitini formatlı bir şekilde ekrana yazdır.
        l_user=$(echo -e "\033[1;31m[\033[1;36m$i\033[1;31m] \033[1;37m- \033[1;32m$_user\033[0m")
        lim=$(echo -e "\033[1;33m◇ㅤLimit\033[1;37m: $limit")
        printf '%-65s%s\n' "$l_user" "$lim"
        
        # Daha sonra kolay seçim için kullanıcı listesini bir değişkende biriktir.
        _userPass+="\n${_oP}:${_user}"
    done <<< "${_userT}"
    
    echo ""
    # Sistemdeki toplam kullanıcı sayısını bul.
    num_user=$(awk -F: '$3>=1000 {print $1}' /etc/passwd | grep -v nobody | wc -l)
    
    # Kullanıcıdan bir seçim yapmasını iste.
    echo -ne "\033[1;32m◇ Bir kullanıcı girin veya seçin \033[1;33m[\033[1;36m1\033[1;31m-\033[1;36m$num_user\033[1;33m]\033[1;37m: " ; read option
    
    # Seçilen numaraya karşılık gelen kullanıcı adını bul.
    usuario=$(echo -e "${_userPass}" | grep -E "\b$option\b" | cut -d: -f2)
    
    # Eğer giriş boş veya geçersizse hata ver.
    if [[ -z $option ]]; then
        tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "◇ Boş veya geçersiz kullanıcı girdiniz." ; echo "" ; tput sgr0
        exit
    elif [[ -z $usuario ]]; then
        tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "◇ Boş veya geçersiz kullanıcı girdiniz." ; echo "" ; tput sgr0
        exit 1
    else
        # Seçilen kullanıcı sistemde gerçekten var mı diye kontrol et.
        if cat /etc/passwd |grep -w $usuario > /dev/null; then
            # Kullanıcıdan yeni limiti girmesini iste.
            echo -ne "\n\033[1;32m◇ \033[1;33m$usuario\033[1;32m kullanıcısı için yeni limit\033[1;37m: "; read sshnum
            
            # Girilen limitin geçerliliğini kontrol et (boş olamaz, sayı olmalı, sıfırdan büyük olmalı).
            if [[ -z $sshnum ]]; then
                tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "◇ Geçersiz bir sayı girdiniz!" ; echo "" ; tput sgr0
                exit 1
            else
                if (echo $sshnum | egrep [^0-9] &> /dev/null); then
                    tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "◇ Geçersiz bir sayı girdiniz!" ; echo "" ; tput sgr0
                    exit 1
                else
                    if [[ $sshnum -lt 1 ]]; then
                        tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "◇ Sıfırdan büyük bir sayı girmelisiniz!" ; echo "" ; tput sgr0
                        exit 1
                    else
                        # Veritabanı dosyasından kullanıcının eski kaydını sil.
                        grep -v "^$usuario[[:space:]]" /root/usuarios.db > /tmp/a
                        sleep 1
                        mv /tmp/a /root/usuarios.db
                        
                        # Kullanıcının yeni limitini dosyaya ekle.
                        echo "$usuario $sshnum" >> /root/usuarios.db
                        
                        tput setaf 7 ; tput setab 4 ; tput bold ; echo "" ; echo "◇ $usuario kullanıcısına $sshnum limiti başarıyla uygulandı." ; tput sgr0
                        sleep 2
                        exit
                    fi
                fi
            fi      
        else
            # Eğer kullanıcı sistemde bulunamazsa hata ver.
            tput setaf 7 ; tput setab 1 ; tput bold ; echo "" ; echo "◇ $usuario kullanıcısı bulunamadı." ; echo "" ; tput sgr0
            exit 1
        fi
    fi
fi